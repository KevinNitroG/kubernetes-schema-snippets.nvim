local ls = require("luasnip")
local t = ls.text_node
local i = ls.insert_node

return function()
  return {
    t("awsdatacenterconfig_v1alpha1"),
    t("awsiamconfig_v1alpha1"),
    t("bundles_v1alpha1"),
    t("cloudstackdatacenterconfig_v1alpha1"),
    t("cloudstackmachineconfig_v1alpha1"),
    t("cluster_v1alpha1"),
    t("cluster_v1alpha3"),
    t("cluster_v1alpha4"),
    t("cluster_v1beta1"),
    t("clusterclass_v1alpha4"),
    t("clusterclass_v1beta1"),
    t("clusterissuer_v1"),
    t("clusterresourceset_v1alpha3"),
    t("clusterresourceset_v1alpha4"),
    t("clusterresourceset_v1beta1"),
    t("clusterresourcesetbinding_v1alpha3"),
    t("clusterresourcesetbinding_v1alpha4"),
    t("clusterresourcesetbinding_v1beta1"),
    t("dockercluster_v1alpha3"),
    t("dockercluster_v1alpha4"),
    t("dockercluster_v1beta1"),
    t("dockerclustertemplate_v1alpha4"),
    t("dockerclustertemplate_v1beta1"),
    t("dockerdatacenterconfig_v1alpha1"),
    t("dockermachine_v1alpha3"),
    t("dockermachine_v1alpha4"),
    t("dockermachine_v1beta1"),
    t("dockermachinepool_v1alpha3"),
    t("dockermachinepool_v1alpha4"),
    t("dockermachinepool_v1beta1"),
    t("dockermachinetemplate_v1alpha3"),
    t("dockermachinetemplate_v1alpha4"),
    t("dockermachinetemplate_v1beta1"),
    t("fluxconfig_v1alpha1"),
    t("gitopsconfig_v1alpha1"),
    t("nutanixdatacenterconfig_v1alpha1"),
    t("nutanixmachineconfig_v1alpha1"),
    t("oidcconfig_v1alpha1"),
    t("snowdatacenterconfig_v1alpha1"),
    t("snowippool_v1alpha1"),
    t("snowmachineconfig_v1alpha1"),
    t("tinkerbelldatacenterconfig_v1alpha1"),
    t("tinkerbellmachineconfig_v1alpha1"),
    t("tinkerbelltemplateconfig_v1alpha1"),
    t("vspheredatacenterconfig_v1alpha1"),
    t("vspheremachineconfig_v1alpha1"),
    i(nil, "resource"),
  }
end
