name: Generate CRDs Catalog
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * */1"
env:
  OUTPUT: ./lua/kubernetes-schema-snippets/autogen/crds_catalog
  REPO: datreeio/CRDs-catalog
jobs:
  generate:
    permissions:
      contents: write
    name: Generate
    runs-on: ubuntu-latest
    concurrency:
      group: generate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 1

      - name: Fetch latest ${{ env.REPO }} hash
        run: git ls-remote https://github.com/${{ env.REPO }}.git refs/heads/master | cut -f1 | tee latest_hash.txt

      - name: Restore hash cache
        id: cache
        uses: actions/cache@v4
        with:
          path: latest_hash.txt
          key: crds-catalog-cache

      - name: Checkout kubernetes-json-schema repo
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          path: crds-catalog
          ref: main
          fetch-depth: 1

      - name: Make dir
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: mkdir -p ${{ env.OUTPUT }}

      - name: Generate api groups
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          # shellcheck disable=SC2086
          api_groups=$(find ./crds-catalog/ -maxdepth 1 -mindepth 1 -type d ! -name '.*' ! -name 'Utilities' -printf '%f\n' | sort)
          {
          	echo 'API_GROUPS<<EOF'
          	echo $api_groups
          	echo 'EOF'
          } >>"$GITHUB_ENV"
          echo $api_groups | ./.scripts/transform-fields-to-lua.sh -f 'api group' >'${{ env.OUTPUT }}/api_groups.lua'

      - name: Make dir for apigroups
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          mkdir '${{ env.OUTPUT }}/resources'
          for group in $API_GROUPS; do
            mkdir "${{ env.OUTPUT }}/resources/${group}"
          done

      - name: Generate resources
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          for group in $API_GROUPS; do
            finalise_name="${group//./_}"
            find "./crds-catalog/${group}/" -type f -printf '%f\n' |
              sed 's/\.json$//' |
              sort |
              ./.scripts/transform-fields-to-lua.sh -f 'resource' > "${{ env.OUTPUT }}/resources/${finalise_name}.lua"
          done

      - uses: JohnnyMorganz/stylua-action@v4
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: "false"

      - name: Format auto generated files
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        shell: bash
        run: |
          find ${{ env.OUTPUT }}/ -type f -name '*.lua' -print0 | xargs -0 stylua

      - uses: EndBug/add-and-commit@v9
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        with:
          add: ${{ env.OUTPUT }}/
          message: "feat(autogen): update crds catalog"
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          pull: --rebase --autostash
